resilience4j.circuitbreaker:
    instances:
      circuitBreakerService:
        ringBufferSizeInHalfOpenState: 5
        ringBufferSizeInClosedState: 5
        failureRateThreshold: 50
        registerHealthIndicator: true
        waitDurationInOpenState: 5s
        recordExceptions:
          - java.lang.RuntimeException
          - java.io.IOException

resilience4j.retry:
  instances:
    retryService:
      maxAttempts: 5
      waitDuration: 10s
      retryExceptions:
        - java.util.concurrent.TimeoutException
        - java.net.ConnectException

resilience4j.bulkhead:
  instances:
    bulkHeadService:
      maxWaitDuration: 5ms
      maxConcurrentCalls: 5

resilience4j.thread-pool-bulkhead:
  instances:
    bulkHeadService:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 4
      queueCapacity: 5
      maxConcurrentCalls: 10
      KeepAliveDuration: 10s
      writableStackTraceEnabled: true


spring:
  flyway:
    enabled: 'true'
    validate-on-migrate: 'true'
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: 'true'
    show-sql: 'true'
  datasource:
    password: postgres
    driver-class-name: org.postgresql.Driver
    username: postgres
    url: jdbc:postgresql://localhost:5431/livraria_db
  cloud:
    loadbalancer:
      ribbon:
        enabled: 'false'
        
eureka:
  instance:
    preferIpAddress: 'true'
  client:
    fetchRegistry: 'true'
    registerWithEureka: 'true'
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
      
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    circuitbreakers:
      enabled: true
